name: demo-crm CI/CD

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: demo-crm
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_PROJECT_GCP_REGION }}
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./demo-crm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies and build
        run: |
          npm install
          npm run build
          npm run dev &

      - name: Wait for server to start
        run: sleep 5

      - name: Check application is running
        run: curl http://localhost:3000

      - name: Stop development server
        run: pkill -f "next dev" || echo "No process found"

      - name: Build Docker image for local test
        run: docker build -t demo-crm:latest .

      - name: Start testing environment
        run: docker compose up -d

      - name: Wait for containers
        run: sleep 5

      - name: Verify containers are running
        run: |
          docker ps -a
          docker images

      - name: API Tests without Postman and add body
        run: |
          curl -X POST http://localhost:80/api/clients \
            -H "Content-Type: application/json" \
            -d '{"id_":"3","name":"Test","email":"test@test.com","company":"Test Dev","website":"https://test.com"}' || exit 1

      - name: Get all clients
        run: |
          curl -X GET http://localhost:80/api/clients || exit 1

      - name: Tear down testing environment
        run: docker compose down -v

      # Authenticate to GCP using Workload Identity Federation (no service account key)
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-sa@PROJECT_ID.iam.gserviceaccount.com'

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker image for Artifact Registry
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/demo-crm/demo-crm:v1.0.0 .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/demo-crm/demo-crm:v1.0.0

  CD:
    needs: CI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 5
    defaults:
      run:
        working-directory: ./demo-crm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'

      - name: Update Kubernetes Deployment
        run: |
          gcloud container clusters get-credentials demo-crm-cluster --region ${{ secrets.GCP_PROJECT_GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl set image deployment/demo-crm-deployment demo-crm-container=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/demo-crm/demo-crm:v1.0.0
          kubectl rollout status deployment/demo-crm-deployment
          kubectl get pods
