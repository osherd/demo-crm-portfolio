name: demo-crm CI/CD

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: demo-crm
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.SERVICES_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./scripts/git_update.sh -v major

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Push Docker Image to Container Registry (GCR)
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

      - name: Push Docker Image to Artifact Registry
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
          docker push us-central1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
          docker push us-central1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
    # runs-on: ubuntu-latest
    # permissions:
    #   contents: 'read'
    #   id-token: 'write' # Needed for auth action
    # env:
    #   IMAGE_NAME: demo-crm
    #   PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    # timeout-minutes: 5
    # defaults:
    #   run:
    #     working-directory: ./demo-crm
    # steps:
    #   # 1. Checkout repository
    #   - name: Checkout repository
    #     uses: actions/checkout@v3

    #   # 2. Install dependencies and build
    #   - name: Install dependencies and build
    #     run: |
    #       npm install
    #       npm run build
    #       npm run dev &

    #   - name: Wait for server to start
    #     run: sleep 5

    #   # 3. Basic smoke test
    #   - name: Check application is running
    #     run: curl http://localhost:3000

    #   - name: Stop development server
    #     run: pkill -f "next dev" || echo "No process found"

    #   # 4. Docker build for testing
    #   - name: Build Docker image for local test
    #     run: docker build -t demo-crm:latest .

    #   # 5. Start Docker Compose for E2E tests
    #   - name: Start testing environment
    #     run: docker compose up -d

    #   - name: Wait for containers
    #     run: sleep 5

    #   - name: Verify containers are running
    #     run: |
    #       docker ps -a
    #       docker images

    #   # - name: Install Newman (Postman CLI)
    #   #   run: npm install -g newman

    #   # - name: Run Postman API tests
    #   #   run: |
    #   #     newman run ../tests/demo-crm.postman_collection.json \
    #   #       --environment ../tests/demo-crm.postman_environment.json \
    #   #       --reporters cli

    #   - name: Tear down testing environment
    #     run: docker compose down -v

    #   # 6. GCP Auth & Push to GCR
    #   - name: Authenticate to GCP
    #     uses: google-github-actions/setup-gcloud@v2
    #     with:
    #       credentials_json: ${{ secrets.SERVICES_ACCOUNT_KEY }}
    #       project_id: ${{ secrets.GCP_PROJECT_ID }}
    #       export_default_credentials: true

    #   - name: Build Docker image
    #     run: docker build -t ${IMAGE_NAME}:latest .

    #   - name: Configure Docker Client
    #     run: |-
    #       gcloud auth configure-docker --quiet

    #   - name: Push Docker image to container registry (GCR)
    #     env:
    #       GIT_TAG: v1.0.0
    #     run: |
    #       docker tag ${IMAGE_NAME}:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/${IMAGE_NAME}:latest
    #       docker tag ${IMAGE_NAME}:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/${IMAGE_NAME}:${GIT_TAG}
    #       docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${IMAGE_NAME}:latest
    #       docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${IMAGE_NAME}:${GIT_TAG}

  CD:
    needs: CI
    runs-on: ubuntu-latest
    timeout-minutes: 2
    defaults:
      run:
        working-directory: ./demo-crm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/setup-gcloud@v2
        with:
          credentials_json: ${{ secrets.SERVICES_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Update Kubernetes Deployment
        run: |
          gcloud container clusters get-credentials demo-crm-cluster --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl set image deployment/demo-crm-deployment demo-crm-container=gcr.io/${{ secrets.GCP_PROJECT_ID }}/demo-crm:v1.0.0
          kubectl rollout status deployment/demo-crm-deployment
          kubectl get pods
