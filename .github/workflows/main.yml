name: demo-crm ci cd
on:
  push:
    branches:
      - main
jobs:
  CI:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        working-directory: ./demo-crm
    steps:
      #Checkout code (1)
      - name: Check out code
        uses: actions/checkout@v2

      #Build the application (2)
      - name: Build the application
        run: |
          npm install  
          npm run build  
          npm run dev &

      - name: wait for server to be upload
        run: sleep 5

      #Unit tests (3)
      - name: Check application
        run: curl http://localhost:3000

      - name: Stop application
        run: pkill -f "next dev" || echo "No process found"

      #Package step (4)
      - name: Build Docker image
        run: |
          docker build -t demo-crm:latest .

      # Run E2E tests (5)
      - name: Deploy testing environment
        run: docker compose up -d
      - name: Check running containers and existed images
        run: |
          docker ps -a
          docker images
      - name: wait application to be upload
        run: |
          sleep 5
          # curl http://localhost:80

      - name: Install Newman (Postman CLI)
        run: npm install -g newman

      - name: Run Postman API Tests
        run: |
          newman run ../postman-tests/demo-crm.postman_collection.json --reporters cli

      - name: Remove testing environment
        run: docker compose down -v

      - name: Configure GCP credentials
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          region: ${{ secrets.GCP_REGION }}

      - name: Configure Docker to use GCP credentials
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          credentials: ${{ secrets.GCP_CREDENTIALS }}
      - name: Configure Docker to use GCP credentials
        uses: google-github-actions/docker@v0
        with:
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/demo-crm:v1.0.0
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          region: ${{ secrets.GCP_REGION }}
      - name: Build Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/demo-crm:v1.0.0 .

      # Authenticate Docker to GCR
      - name: Authenticate Docker to GCR
        run: |
          echo ${{ secrets.GCP_CREDENTIALS }} | docker login -u _json_key --password-stdin https://gcr.io

      # Tag Docker image
      - name: Tag Docker image
        run: docker tag demo-crm:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/demo-crm:v1.0.0

      # Publish to GCR repository
      - name: Push Docker image to GCR
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/demo-crm:v1.0.0

  CD:
    needs: CI
    runs-on: ubuntu-latest
    timeout-minutes: 2
    defaults:
      run:
        working-directory: ./demo-crm
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure GCP credentials
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          region: ${{ secrets.GCP_REGION }}

      - name: Update Kubernetes Deployment
        run: |
          gcloud container clusters get-credentials demo-crm-cluster --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl set image deployment/demo-crm-deployment demo-crm-container=gcr.io/${{ secrets.GCP_PROJECT_ID }}/demo-crm:v1.0.0
          kubectl rollout status deployment/demo-crm-deployment
          kubectl get pods
          kubectl describe deployment demo-crm
